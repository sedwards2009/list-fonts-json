name: $(Date:yyyyMMdd)$(Rev:.r)_$(SourceBranchName)
trigger:
- master

jobs:
  - job: build_windows
    displayName: "Windows build"
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - script: |
          mkdir build
          cd build
          cmake -DCMAKE_GENERATOR_PLATFORM=x64 ..
      - task: MSBuild@1
        inputs:
          solution: '**/*.sln'
          msbuildArchitecture: 'x64'
          msbuildArguments: '/p:Configuration=Release'
      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/build/Release/'
          contents: '*.exe'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'windows build output'
          targetPath: '$(Build.ArtifactStagingDirectory)'

  - job: build_macos
    displayName: "macOS build"
    pool:
      vmImage: 'macOS-10.14'
    steps:
      - script: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/build/'
          contents: 'list-fonts-json'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'macOS build output'
          targetPath: '$(Build.ArtifactStagingDirectory)'

  - job: build_linux
    displayName: "linux build"
    pool:
      vmImage: 'Ubuntu-18.04'
    steps:
      - script: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/build/'
          contents: 'list-fonts-json'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'Linux build output'
          targetPath: '$(Build.ArtifactStagingDirectory)'
